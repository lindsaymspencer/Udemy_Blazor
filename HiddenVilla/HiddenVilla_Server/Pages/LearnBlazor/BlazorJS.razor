@page "/blazorjs"
@inject IJSRuntime JsRuntime

<h3>BlazorJS</h3>

<div class="row">
    <button class="btn btn-secondary" @onclick="(()=>TestConfirmBox(ConfirmMessage))">Test Confirm Box</button>
</div>
<div class="row mt-4">
    <button class="btn btn-success" @onclick="TestSuccess">Test Confirm Box</button>
    <button class="btn btn-danger" @onclick="TestFailure">Test Confirm Box</button>
</div>
<div class="row mt-4">
    <button class="btn btn-success" @onclick="SweetAlertSuccess">Sweet Alert Box</button>
    <button class="btn btn-danger" @onclick="SweetAlertFailure">Sweet Alert Box</button>
</div>
<div class="row">
    @if (ConfirmResult)
    {
        <p>Confirmation has been made!</p>
    }
    else
    {
        <p>Confirmation pending.</p>
    }
</div>

@code {
    private string ConfirmMessage = "Are you sure you want to click?";
    public bool ConfirmResult { get; set; }

    private async Task TestConfirmBox(string message)
    {
        ConfirmResult = await JsRuntime.InvokeAsync<bool>("confirm", ConfirmMessage);
    }
    private async Task TestSuccess()
    {
        await JsRuntime.ToasterSuccess("Success Message");
    }
    private async Task TestFailure()
    {
        await JsRuntime.ToasterError("Error Message");
    }
    private async Task SweetAlertSuccess()
    {
        await JsRuntime.SweetAlertSuccess("Success Message");
    }
    private async Task SweetAlertFailure()
    {
        await JsRuntime.SweetAlertError("Error Message");
    }

}
